
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS COMMA DIM DIV DO ELSE END EQUALS FLOAT FOR GOSUB GOTO GREATEROREQUAL GREATERTHAN ID IF INPUT INT ISEQUAL ISNOTEQUAL LBRACKET LESSOREQUAL LESSTHAN LET LOOP LPAR MAIN MULT NEXT NOT OR PRINT PROCEDURE PROGRAM RBRACKET RETURN RPAR STRING SUB SUM THEN TO TY_FLOAT TY_INT TY_STRING WEND WHILE\n    programa : aux_pr variable process aux_main block END\n    \n    aux_pr : PROGRAM\n    \n    aux_main : MAIN\n    \n    variable : DIM repeat_id AS type repeat_size end_var variable\n             | empty\n    \n    repeat_id : ID COMMA repeat_id\n              | ID\n    \n    type : TY_INT\n         | TY_FLOAT\n         | TY_STRING\n    \n    repeat_size : LBRACKET INT RBRACKET repeat_size\n                | empty\n    \n    end_var : empty\n    \n    block : repeat_state\n    \n    repeat_state : statement repeat_state\n                 | empty\n    \n    process : PROCEDURE aux_id variable block fin_proc process\n            | empty\n    \n    aux_id : ID\n    \n    fin_proc : RETURN\n    \n    statement : GOTO ID\n              | ID\n    \n    statement : GOSUB ID\n    \n    statement : LET var EQUALS expression\n    \n    var : ID repeat_size_v\n    \n    repeat_size_v : aux_ar2 \n                  | empty\n    \n    aux_ar2 : LBRACKET expression else_size RBRACKET\n    \n    else_size : COMMA expression else_size\n              | empty\n    \n    statement : FOR aux_F1 expression aux_F2 TO expression aux_F3 repeat_state NEXT aux_F4\n    \n    aux_F1 : ID EQUALS \n    \n    aux_F2 : empty\n    \n    aux_F3 : empty\n    \n    aux_F4 : ID\n    \n    statement : WHILE aux_w1 expression aux_w2 DO repeat_state WEND aux_w3\n    \n    aux_w1 : empty\n    \n    aux_w2 : empty\n    \n    aux_w3 : empty\n    \n    statement : DO aux_d1 repeat_state LOOP WHILE expression aux_d2\n    \n    aux_d1 : empty\n    \n    aux_d2 : empty\n    \n    statement : IF expression aux_if1 THEN repeat_state ELSE aux_if2 repeat_state END IF aux_if3\n    \n    aux_if1 : empty\n    \n    aux_if2 : empty\n    \n    aux_if3 : empty\n    \n    statement : INPUT repeat_elem\n    \n    statement : PRINT repeat_elem\n    \n    repeat_elem : elem COMMA repeat_elem\n                | elem\n    \n    elem : STRING\n         | FLOAT\n         | INT\n         | var\n    \n    expression : first_exp GREATERTHAN first_exp\n               | first_exp GREATEROREQUAL first_exp\n               | first_exp LESSTHAN first_exp\n               | first_exp LESSOREQUAL first_exp\n               | first_exp ISEQUAL first_exp\n               | first_exp ISNOTEQUAL first_exp\n               | first_exp\n    \n    first_exp : term\n              | first_exp SUM term\n              | first_exp SUB term\n              | first_exp OR term\n    \n    term : factor\n        | term MULT factor\n        | term DIV factor\n        | term AND factor\n    \n    factor : other_fact\n           | NOT other_fact\n    \n    other_fact : elem\n               | LPAR expression RPAR\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,38,],[0,-1,]),'DIM':([2,3,14,15,33,34,35,36,66,68,97,98,124,132,],[5,-2,5,-19,-74,-8,-9,-10,-74,-12,5,-13,-74,-11,]),'PROCEDURE':([2,3,4,6,33,34,35,36,66,68,95,96,97,98,123,124,132,],[-74,-2,8,-5,-74,-8,-9,-10,-74,-12,8,-20,-74,-13,-4,-74,-11,]),'MAIN':([2,3,4,6,7,9,33,34,35,36,66,68,95,96,97,98,122,123,124,132,],[-74,-2,-74,-5,13,-18,-74,-8,-9,-10,-74,-12,-74,-20,-74,-13,-17,-4,-74,-11,]),'ID':([5,6,8,12,13,14,15,17,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,41,43,44,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,68,69,70,71,72,73,75,80,81,82,83,84,85,86,87,88,89,90,91,92,94,97,98,100,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,126,128,129,130,132,133,135,137,138,140,141,142,143,144,145,146,148,149,151,153,154,155,156,157,],[11,-5,15,23,-3,-74,-19,11,23,40,-22,41,43,45,-74,-74,43,43,43,23,-74,-8,-9,-10,-21,-23,-74,43,43,-37,23,-41,-61,-62,-66,-70,43,-72,43,-51,-52,-53,-54,-47,-50,-48,-74,-12,43,-25,-26,-27,43,-32,43,43,43,43,43,43,43,43,43,43,43,43,-71,43,-74,-13,-24,23,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,43,43,23,43,-11,-28,-74,-74,-74,23,-34,-74,-40,-42,23,-45,-36,-39,154,-31,-35,-74,-43,-46,]),'GOTO':([6,12,13,14,15,20,23,28,32,33,34,35,36,40,41,43,48,49,51,52,53,54,56,58,59,60,61,62,63,64,66,68,70,71,72,92,97,98,100,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,129,132,133,135,137,138,140,141,142,143,144,145,146,148,149,153,154,155,156,157,],[-5,22,-3,-74,-19,22,-22,-74,22,-74,-8,-9,-10,-21,-23,-74,22,-41,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-74,-12,-25,-26,-27,-71,-74,-13,-24,22,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,22,-11,-28,-74,-74,-74,22,-34,-74,-40,-42,22,-45,-36,-39,-31,-35,-74,-43,-46,]),'GOSUB':([6,12,13,14,15,20,23,28,32,33,34,35,36,40,41,43,48,49,51,52,53,54,56,58,59,60,61,62,63,64,66,68,70,71,72,92,97,98,100,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,129,132,133,135,137,138,140,141,142,143,144,145,146,148,149,153,154,155,156,157,],[-5,24,-3,-74,-19,24,-22,-74,24,-74,-8,-9,-10,-21,-23,-74,24,-41,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-74,-12,-25,-26,-27,-71,-74,-13,-24,24,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,24,-11,-28,-74,-74,-74,24,-34,-74,-40,-42,24,-45,-36,-39,-31,-35,-74,-43,-46,]),'LET':([6,12,13,14,15,20,23,28,32,33,34,35,36,40,41,43,48,49,51,52,53,54,56,58,59,60,61,62,63,64,66,68,70,71,72,92,97,98,100,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,129,132,133,135,137,138,140,141,142,143,144,145,146,148,149,153,154,155,156,157,],[-5,25,-3,-74,-19,25,-22,-74,25,-74,-8,-9,-10,-21,-23,-74,25,-41,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-74,-12,-25,-26,-27,-71,-74,-13,-24,25,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,25,-11,-28,-74,-74,-74,25,-34,-74,-40,-42,25,-45,-36,-39,-31,-35,-74,-43,-46,]),'FOR':([6,12,13,14,15,20,23,28,32,33,34,35,36,40,41,43,48,49,51,52,53,54,56,58,59,60,61,62,63,64,66,68,70,71,72,92,97,98,100,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,129,132,133,135,137,138,140,141,142,143,144,145,146,148,149,153,154,155,156,157,],[-5,26,-3,-74,-19,26,-22,-74,26,-74,-8,-9,-10,-21,-23,-74,26,-41,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-74,-12,-25,-26,-27,-71,-74,-13,-24,26,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,26,-11,-28,-74,-74,-74,26,-34,-74,-40,-42,26,-45,-36,-39,-31,-35,-74,-43,-46,]),'WHILE':([6,12,13,14,15,20,23,28,32,33,34,35,36,40,41,43,48,49,51,52,53,54,56,58,59,60,61,62,63,64,66,68,70,71,72,92,97,98,100,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,129,132,133,135,137,138,140,141,142,143,144,145,146,148,149,153,154,155,156,157,],[-5,27,-3,-74,-19,27,-22,-74,27,-74,-8,-9,-10,-21,-23,-74,27,-41,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-74,-12,-25,-26,-27,-71,-74,-13,-24,130,27,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,27,-11,-28,-74,-74,-74,27,-34,-74,-40,-42,27,-45,-36,-39,-31,-35,-74,-43,-46,]),'DO':([6,12,13,14,15,20,23,28,32,33,34,35,36,40,41,43,48,49,51,52,53,54,56,58,59,60,61,62,63,64,66,68,70,71,72,76,92,97,98,100,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,129,132,133,135,137,138,140,141,142,143,144,145,146,148,149,153,154,155,156,157,],[-5,28,-3,-74,-19,28,-22,-74,28,-74,-8,-9,-10,-21,-23,-74,28,-41,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-74,-12,-25,-26,-27,-74,-71,-74,-13,-24,129,-38,28,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,28,-11,-28,-74,-74,-74,28,-34,-74,-40,-42,28,-45,-36,-39,-31,-35,-74,-43,-46,]),'IF':([6,12,13,14,15,20,23,28,32,33,34,35,36,40,41,43,48,49,51,52,53,54,56,58,59,60,61,62,63,64,66,68,70,71,72,92,97,98,100,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,129,132,133,135,137,138,140,141,142,143,144,145,146,148,149,152,153,154,155,156,157,],[-5,29,-3,-74,-19,29,-22,-74,29,-74,-8,-9,-10,-21,-23,-74,29,-41,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-74,-12,-25,-26,-27,-71,-74,-13,-24,29,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,29,-11,-28,-74,-74,-74,29,-34,-74,-40,-42,29,-45,-36,-39,155,-31,-35,-74,-43,-46,]),'INPUT':([6,12,13,14,15,20,23,28,32,33,34,35,36,40,41,43,48,49,51,52,53,54,56,58,59,60,61,62,63,64,66,68,70,71,72,92,97,98,100,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,129,132,133,135,137,138,140,141,142,143,144,145,146,148,149,153,154,155,156,157,],[-5,30,-3,-74,-19,30,-22,-74,30,-74,-8,-9,-10,-21,-23,-74,30,-41,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-74,-12,-25,-26,-27,-71,-74,-13,-24,30,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,30,-11,-28,-74,-74,-74,30,-34,-74,-40,-42,30,-45,-36,-39,-31,-35,-74,-43,-46,]),'PRINT':([6,12,13,14,15,20,23,28,32,33,34,35,36,40,41,43,48,49,51,52,53,54,56,58,59,60,61,62,63,64,66,68,70,71,72,92,97,98,100,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,129,132,133,135,137,138,140,141,142,143,144,145,146,148,149,153,154,155,156,157,],[-5,31,-3,-74,-19,31,-22,-74,31,-74,-8,-9,-10,-21,-23,-74,31,-41,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-74,-12,-25,-26,-27,-71,-74,-13,-24,31,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,31,-11,-28,-74,-74,-74,31,-34,-74,-40,-42,31,-45,-36,-39,-31,-35,-74,-43,-46,]),'RETURN':([6,14,15,19,20,21,23,32,33,34,35,36,39,40,41,43,51,52,53,54,56,58,59,60,61,62,63,64,65,66,68,70,71,72,92,97,98,100,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,132,133,137,142,143,144,148,149,153,154,155,156,157,],[-5,-74,-19,-14,-74,-16,-22,-74,-74,-8,-9,-10,-15,-21,-23,-74,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,96,-74,-12,-25,-26,-27,-71,-74,-13,-24,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-4,-74,-11,-28,-74,-74,-40,-42,-36,-39,-31,-35,-74,-43,-46,]),'AS':([10,11,37,],[16,-7,-6,]),'COMMA':([11,43,51,52,53,54,56,58,59,60,61,63,70,71,72,92,101,108,109,110,111,112,113,114,115,116,117,118,119,120,133,134,],[17,-74,-61,-62,-66,-70,-72,-51,-52,-53,-54,94,-25,-26,-27,-71,126,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-28,126,]),'END':([12,13,18,19,20,21,23,39,40,41,43,51,52,53,54,56,58,59,60,61,62,63,64,70,71,72,92,100,108,109,110,111,112,113,114,115,116,117,118,119,120,121,133,137,138,142,143,144,145,146,148,149,150,153,154,155,156,157,],[-74,-3,38,-14,-74,-16,-22,-15,-21,-23,-74,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-25,-26,-27,-71,-24,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-28,-74,-74,-74,-40,-42,-74,-45,-36,-39,152,-31,-35,-74,-43,-46,]),'TY_INT':([16,],[34,]),'TY_FLOAT':([16,],[35,]),'TY_STRING':([16,],[36,]),'LOOP':([20,21,23,28,39,40,41,43,48,49,51,52,53,54,56,58,59,60,61,62,63,64,70,71,72,77,92,100,108,109,110,111,112,113,114,115,116,117,118,119,120,121,133,137,142,143,144,148,149,153,154,155,156,157,],[-74,-16,-22,-74,-15,-21,-23,-74,-74,-41,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-25,-26,-27,106,-71,-24,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-28,-74,-74,-40,-42,-36,-39,-31,-35,-74,-43,-46,]),'ELSE':([20,21,23,39,40,41,43,51,52,53,54,56,58,59,60,61,62,63,64,70,71,72,92,100,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,131,133,137,142,143,144,148,149,153,154,155,156,157,],[-74,-16,-22,-15,-21,-23,-74,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-25,-26,-27,-71,-24,-74,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,138,-28,-74,-74,-40,-42,-36,-39,-31,-35,-74,-43,-46,]),'WEND':([20,21,23,39,40,41,43,51,52,53,54,56,58,59,60,61,62,63,64,70,71,72,92,100,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,133,136,137,142,143,144,148,149,153,154,155,156,157,],[-74,-16,-22,-15,-21,-23,-74,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-25,-26,-27,-71,-24,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-74,-28,142,-74,-74,-40,-42,-36,-39,-31,-35,-74,-43,-46,]),'NEXT':([20,21,23,39,40,41,43,51,52,53,54,56,58,59,60,61,62,63,64,70,71,72,92,100,108,109,110,111,112,113,114,115,116,117,118,119,120,121,133,135,137,140,141,142,143,144,147,148,149,153,154,155,156,157,],[-74,-16,-22,-15,-21,-23,-74,-61,-62,-66,-70,-72,-51,-52,-53,-54,-47,-50,-48,-25,-26,-27,-71,-24,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-49,-28,-74,-74,-74,-34,-74,-40,-42,151,-36,-39,-31,-35,-74,-43,-46,]),'NOT':([27,29,44,46,47,57,69,73,75,80,81,82,83,84,85,86,87,88,89,90,91,126,128,130,],[-74,55,55,55,-37,55,55,55,-32,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LPAR':([27,29,44,46,47,55,57,69,73,75,80,81,82,83,84,85,86,87,88,89,90,91,126,128,130,],[-74,57,57,57,-37,57,57,57,57,-32,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'STRING':([27,29,30,31,44,46,47,55,57,69,73,75,80,81,82,83,84,85,86,87,88,89,90,91,94,126,128,130,],[-74,58,58,58,58,58,-37,58,58,58,58,-32,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FLOAT':([27,29,30,31,44,46,47,55,57,69,73,75,80,81,82,83,84,85,86,87,88,89,90,91,94,126,128,130,],[-74,59,59,59,59,59,-37,59,59,59,59,-32,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'INT':([27,29,30,31,44,46,47,55,57,67,69,73,75,80,81,82,83,84,85,86,87,88,89,90,91,94,126,128,130,],[-74,60,60,60,60,60,-37,60,60,99,60,60,-32,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'LBRACKET':([33,34,35,36,43,124,],[67,-8,-9,-10,73,67,]),'EQUALS':([42,43,45,70,71,72,133,],[69,-74,75,-25,-26,-27,-28,]),'MULT':([43,52,53,54,56,58,59,60,61,70,71,72,92,114,115,116,117,118,119,120,133,],[-74,89,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,89,89,89,-67,-68,-69,-73,-28,]),'DIV':([43,52,53,54,56,58,59,60,61,70,71,72,92,114,115,116,117,118,119,120,133,],[-74,90,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,90,90,90,-67,-68,-69,-73,-28,]),'AND':([43,52,53,54,56,58,59,60,61,70,71,72,92,114,115,116,117,118,119,120,133,],[-74,91,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,91,91,91,-67,-68,-69,-73,-28,]),'GREATERTHAN':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,114,115,116,117,118,119,120,133,],[-74,80,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,-63,-64,-65,-67,-68,-69,-73,-28,]),'GREATEROREQUAL':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,114,115,116,117,118,119,120,133,],[-74,81,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,-63,-64,-65,-67,-68,-69,-73,-28,]),'LESSTHAN':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,114,115,116,117,118,119,120,133,],[-74,82,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,-63,-64,-65,-67,-68,-69,-73,-28,]),'LESSOREQUAL':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,114,115,116,117,118,119,120,133,],[-74,83,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,-63,-64,-65,-67,-68,-69,-73,-28,]),'ISEQUAL':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,114,115,116,117,118,119,120,133,],[-74,84,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,-63,-64,-65,-67,-68,-69,-73,-28,]),'ISNOTEQUAL':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,114,115,116,117,118,119,120,133,],[-74,85,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,-63,-64,-65,-67,-68,-69,-73,-28,]),'SUM':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,108,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-74,86,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,86,86,86,86,86,86,-63,-64,-65,-67,-68,-69,-73,-28,]),'SUB':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,108,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-74,87,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,87,87,87,87,87,87,-63,-64,-65,-67,-68,-69,-73,-28,]),'OR':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,108,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-74,88,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,88,88,88,88,88,88,-63,-64,-65,-67,-68,-69,-73,-28,]),'THEN':([43,50,51,52,53,54,56,58,59,60,61,70,71,72,78,79,92,108,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-74,-74,-61,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,107,-44,-71,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-28,]),'TO':([43,51,52,53,54,56,58,59,60,61,70,71,72,74,92,102,103,108,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-74,-61,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-74,-71,128,-33,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-28,]),'RPAR':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,93,108,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-74,-61,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,120,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,-28,]),'RBRACKET':([43,51,52,53,54,56,58,59,60,61,70,71,72,92,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,133,134,139,],[-74,-61,-62,-66,-70,-72,-51,-52,-53,-54,-25,-26,-27,-71,124,-74,-55,-56,-57,-58,-59,-60,-63,-64,-65,-67,-68,-69,-73,133,-30,-28,-74,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'aux_pr':([0,],[2,]),'variable':([2,14,97,],[4,32,123,]),'empty':([2,4,12,14,20,27,28,32,33,43,48,50,66,74,76,95,97,101,107,124,129,134,135,137,138,140,142,145,155,],[6,9,21,6,21,47,49,21,68,72,21,79,98,103,105,9,6,127,21,68,21,127,141,144,146,21,149,21,157,]),'process':([4,95,],[7,122,]),'repeat_id':([5,17,],[10,37,]),'aux_main':([7,],[12,]),'aux_id':([8,],[14,]),'block':([12,32,],[18,65,]),'repeat_state':([12,20,32,48,107,129,140,145,],[19,39,19,77,131,136,147,150,]),'statement':([12,20,32,48,107,129,140,145,],[20,20,20,20,20,20,20,20,]),'type':([16,],[33,]),'var':([25,29,30,31,44,46,55,57,69,73,80,81,82,83,84,85,86,87,88,89,90,91,94,126,128,130,],[42,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'aux_F1':([26,],[44,]),'aux_w1':([27,],[46,]),'aux_d1':([28,],[48,]),'expression':([29,44,46,57,69,73,126,128,130,],[50,74,76,93,100,101,134,135,137,]),'first_exp':([29,44,46,57,69,73,80,81,82,83,84,85,126,128,130,],[51,51,51,51,51,51,108,109,110,111,112,113,51,51,51,]),'term':([29,44,46,57,69,73,80,81,82,83,84,85,86,87,88,126,128,130,],[52,52,52,52,52,52,52,52,52,52,52,52,114,115,116,52,52,52,]),'factor':([29,44,46,57,69,73,80,81,82,83,84,85,86,87,88,89,90,91,126,128,130,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,117,118,119,53,53,53,]),'other_fact':([29,44,46,55,57,69,73,80,81,82,83,84,85,86,87,88,89,90,91,126,128,130,],[54,54,54,92,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'elem':([29,30,31,44,46,55,57,69,73,80,81,82,83,84,85,86,87,88,89,90,91,94,126,128,130,],[56,63,63,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,63,56,56,56,]),'repeat_elem':([30,31,94,],[62,64,121,]),'repeat_size':([33,124,],[66,132,]),'repeat_size_v':([43,],[70,]),'aux_ar2':([43,],[71,]),'aux_if1':([50,],[78,]),'fin_proc':([65,],[95,]),'end_var':([66,],[97,]),'aux_F2':([74,],[102,]),'aux_w2':([76,],[104,]),'else_size':([101,134,],[125,139,]),'aux_F3':([135,],[140,]),'aux_d2':([137,],[143,]),'aux_if2':([138,],[145,]),'aux_w3':([142,],[148,]),'aux_F4':([151,],[153,]),'aux_if3':([155,],[156,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> aux_pr variable process aux_main block END','programa',6,'p_programa','First.py',463),
  ('aux_pr -> PROGRAM','aux_pr',1,'p_aux_pr','First.py',472),
  ('aux_main -> MAIN','aux_main',1,'p_aux_main','First.py',481),
  ('variable -> DIM repeat_id AS type repeat_size end_var variable','variable',7,'p_variable','First.py',488),
  ('variable -> empty','variable',1,'p_variable','First.py',489),
  ('repeat_id -> ID COMMA repeat_id','repeat_id',3,'p_repeat_id','First.py',494),
  ('repeat_id -> ID','repeat_id',1,'p_repeat_id','First.py',495),
  ('type -> TY_INT','type',1,'p_type','First.py',504),
  ('type -> TY_FLOAT','type',1,'p_type','First.py',505),
  ('type -> TY_STRING','type',1,'p_type','First.py',506),
  ('repeat_size -> LBRACKET INT RBRACKET repeat_size','repeat_size',4,'p_repeat_size','First.py',515),
  ('repeat_size -> empty','repeat_size',1,'p_repeat_size','First.py',516),
  ('end_var -> empty','end_var',1,'p_end_var','First.py',525),
  ('block -> repeat_state','block',1,'p_block','First.py',556),
  ('repeat_state -> statement repeat_state','repeat_state',2,'p_repeat_state','First.py',561),
  ('repeat_state -> empty','repeat_state',1,'p_repeat_state','First.py',562),
  ('process -> PROCEDURE aux_id variable block fin_proc process','process',6,'p_process','First.py',568),
  ('process -> empty','process',1,'p_process','First.py',569),
  ('aux_id -> ID','aux_id',1,'p_aux_id','First.py',574),
  ('fin_proc -> RETURN','fin_proc',1,'p_fin_proc','First.py',581),
  ('statement -> GOTO ID','statement',2,'p_statement','First.py',590),
  ('statement -> ID','statement',1,'p_statement','First.py',591),
  ('statement -> GOSUB ID','statement',2,'p_statement_procedure','First.py',596),
  ('statement -> LET var EQUALS expression','statement',4,'p_statement_let','First.py',611),
  ('var -> ID repeat_size_v','var',2,'p_var','First.py',623),
  ('repeat_size_v -> aux_ar2','repeat_size_v',1,'p_repeat_size_v','First.py',666),
  ('repeat_size_v -> empty','repeat_size_v',1,'p_repeat_size_v','First.py',667),
  ('aux_ar2 -> LBRACKET expression else_size RBRACKET','aux_ar2',4,'p_aux_r2','First.py',672),
  ('else_size -> COMMA expression else_size','else_size',3,'p_else_size','First.py',677),
  ('else_size -> empty','else_size',1,'p_else_size','First.py',678),
  ('statement -> FOR aux_F1 expression aux_F2 TO expression aux_F3 repeat_state NEXT aux_F4','statement',10,'p_statement_for','First.py',684),
  ('aux_F1 -> ID EQUALS','aux_F1',2,'p_for_aux_F1','First.py',689),
  ('aux_F2 -> empty','aux_F2',1,'p_for_aux_F2','First.py',695),
  ('aux_F3 -> empty','aux_F3',1,'p_for_aux_F3','First.py',707),
  ('aux_F4 -> ID','aux_F4',1,'p_for_aux_F4','First.py',728),
  ('statement -> WHILE aux_w1 expression aux_w2 DO repeat_state WEND aux_w3','statement',8,'p_statement_while','First.py',746),
  ('aux_w1 -> empty','aux_w1',1,'p_aux_w1','First.py',751),
  ('aux_w2 -> empty','aux_w2',1,'p_aux_w2','First.py',758),
  ('aux_w3 -> empty','aux_w3',1,'p_aux_w3','First.py',769),
  ('statement -> DO aux_d1 repeat_state LOOP WHILE expression aux_d2','statement',7,'p_statement_do','First.py',782),
  ('aux_d1 -> empty','aux_d1',1,'p_aux_d1','First.py',787),
  ('aux_d2 -> empty','aux_d2',1,'p_aux_d2','First.py',794),
  ('statement -> IF expression aux_if1 THEN repeat_state ELSE aux_if2 repeat_state END IF aux_if3','statement',11,'p_statement_if','First.py',804),
  ('aux_if1 -> empty','aux_if1',1,'p_aux_if1','First.py',810),
  ('aux_if2 -> empty','aux_if2',1,'p_aux_if2','First.py',821),
  ('aux_if3 -> empty','aux_if3',1,'p_aux_if3','First.py',833),
  ('statement -> INPUT repeat_elem','statement',2,'p_statement_input','First.py',842),
  ('statement -> PRINT repeat_elem','statement',2,'p_statement_print','First.py',853),
  ('repeat_elem -> elem COMMA repeat_elem','repeat_elem',3,'p_repeat_elem','First.py',863),
  ('repeat_elem -> elem','repeat_elem',1,'p_repeat_elem','First.py',864),
  ('elem -> STRING','elem',1,'p_elem','First.py',869),
  ('elem -> FLOAT','elem',1,'p_elem','First.py',870),
  ('elem -> INT','elem',1,'p_elem','First.py',871),
  ('elem -> var','elem',1,'p_elem','First.py',872),
  ('expression -> first_exp GREATERTHAN first_exp','expression',3,'p_expression','First.py',880),
  ('expression -> first_exp GREATEROREQUAL first_exp','expression',3,'p_expression','First.py',881),
  ('expression -> first_exp LESSTHAN first_exp','expression',3,'p_expression','First.py',882),
  ('expression -> first_exp LESSOREQUAL first_exp','expression',3,'p_expression','First.py',883),
  ('expression -> first_exp ISEQUAL first_exp','expression',3,'p_expression','First.py',884),
  ('expression -> first_exp ISNOTEQUAL first_exp','expression',3,'p_expression','First.py',885),
  ('expression -> first_exp','expression',1,'p_expression','First.py',886),
  ('first_exp -> term','first_exp',1,'p_first_exp','First.py',902),
  ('first_exp -> first_exp SUM term','first_exp',3,'p_first_exp','First.py',903),
  ('first_exp -> first_exp SUB term','first_exp',3,'p_first_exp','First.py',904),
  ('first_exp -> first_exp OR term','first_exp',3,'p_first_exp','First.py',905),
  ('term -> factor','term',1,'p_term','First.py',923),
  ('term -> term MULT factor','term',3,'p_term','First.py',924),
  ('term -> term DIV factor','term',3,'p_term','First.py',925),
  ('term -> term AND factor','term',3,'p_term','First.py',926),
  ('factor -> other_fact','factor',1,'p_factor','First.py',944),
  ('factor -> NOT other_fact','factor',2,'p_factor','First.py',945),
  ('other_fact -> elem','other_fact',1,'p_other_fact','First.py',959),
  ('other_fact -> LPAR expression RPAR','other_fact',3,'p_other_fact','First.py',960),
  ('empty -> <empty>','empty',0,'p_empty','First.py',969),
]
